package br.com.walison.lucros.visao.outras;

import br.com.walison.lucros.visao.listagem.JListarProdutos;
import br.com.walison.lucros.visao.cadastros.JCadastroCliente;
import br.com.walison.lucros.classes.Janela;
import br.com.walison.lucros.classes.Calendario;
import br.com.walison.lucros.classes.Conexao;
import br.com.walison.lucros.classes.modelos.Fornecedor;
import br.com.walison.lucros.classes.Mensagem;
import br.com.walison.lucros.classes.modelos.Produto;
import br.com.walison.lucros.classes.Sistema;
import br.com.walison.lucros.classes.TrataNumeros;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Walison Cec√≠lio
 */
public class JAddEstoque extends javax.swing.JPanel {

    /**
     * Creates new form JAddEstoque
     */
    public JAddEstoque() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lNonProd = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cQtd = new javax.swing.JTextField();
        cVal = new javax.swing.JFormattedTextField();
        cVlCom = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lDes = new javax.swing.JLabel();
        lMar = new javax.swing.JLabel();
        cForCadProd = new javax.swing.JComboBox<>();
        lForCadProd = new javax.swing.JLabel();

        lNonProd.setFont(new java.awt.Font("Cantarell", 3, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabel1.setText("Quantidade");

        jLabel2.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabel2.setText("Data de Validade");

        jLabel3.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabel3.setText("Valor de Compra");

        cQtd.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        cQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cQtdActionPerformed(evt);
            }
        });

        try {
            cVal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cVal.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N

        try {
            cVlCom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("R$ ##.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cVlCom.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        cVlCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cVlComKeyPressed(evt);
            }
        });

        jButton1.setText("Adicionar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Sair");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        lDes.setFont(new java.awt.Font("Cantarell", 3, 14)); // NOI18N

        lMar.setFont(new java.awt.Font("Cantarell", 3, 14)); // NOI18N

        lForCadProd.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        lForCadProd.setText("FORNECEDOR:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cVal)
                    .addComponent(cVlCom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(cQtd, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lDes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lNonProd, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lMar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(lForCadProd))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(cForCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lNonProd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lDes, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lMar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cVlCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addComponent(lForCadProd)
                .addGap(18, 18, 18)
                .addComponent(cForCadProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cQtdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cQtdActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
       
        try {
            this.sair();
        } catch (SQLException ex) {
            Logger.getLogger(JAddEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        try {
            this.addProdutoEstoque();
        } catch (SQLException ex) {
            Logger.getLogger(JAddEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void cVlComKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cVlComKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                this.addProdutoEstoque();
            } catch (SQLException ex) {
                Logger.getLogger(JCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cVlComKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cForCadProd;
    private javax.swing.JTextField cQtd;
    private javax.swing.JFormattedTextField cVal;
    private javax.swing.JFormattedTextField cVlCom;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lDes;
    private javax.swing.JLabel lForCadProd;
    private javax.swing.JLabel lMar;
    private javax.swing.JLabel lNonProd;
    // End of variables declaration//GEN-END:variables
    private Produto prod;
    private Janela j;
    private Janela principal;
    private Sistema sis = new Sistema();
    private Mensagem mensagem = new Mensagem();
    private LinkedList<Fornecedor> fornecedores;
    
    private Fornecedor retornaFornecedor(String nomeFornecedor){
        for(Fornecedor fornecedor : this.fornecedores){
            if(fornecedor.getNom_for().equals(nomeFornecedor))
                return fornecedor;
        }
        return null;
    }
    
    private int pegaCodFornecedor(){
        String nomeFornecedor = (String) this.getcForCadProd().getSelectedItem();

        int cod_for = 0;

        Fornecedor fornecedor = this.retornaFornecedor(nomeFornecedor);

        if(fornecedor != null)
            cod_for = fornecedor.getCod_for();
        
        return cod_for;
    }
    
    private void preparaStatement(int cod_for, PreparedStatement stmtAddEstoque, PreparedStatement stmt) throws SQLException{
        
        TrataNumeros trataNumeros = new TrataNumeros();
        Calendario calendario = new Calendario();
        
        int qtdeProduto = Integer.parseInt(this.cQtd.getText());
        
        stmtAddEstoque.setInt(1, this.prod.getCod_prod());
        stmtAddEstoque.setInt(2, qtdeProduto);
        stmtAddEstoque.setString(3, trataNumeros.trataDatas("01/"+this.cVal.getText()));
        stmtAddEstoque.setString(4, trataNumeros.trataDatas(calendario.retornaData()));
        stmtAddEstoque.setString(5, calendario.retornaHora());
        stmtAddEstoque.setFloat(6, trataNumeros.trataDinheiro(this.cVlCom.getText()));
        stmtAddEstoque.setInt(7, cod_for);
        
        stmt.setInt(1, qtdeProduto);
        stmt.setInt(2, this.prod.getCod_prod());
    }
    
    private void addProdutoEstoque() throws SQLException {
        try { 
            int cod_for = this.pegaCodFornecedor();
            
            if(this.cQtd.getText().equals("") || this.cVal.getText().equals("  /    ") || this.cVlCom.getText().equals("R$   .  ")){
                this.mensagem.msg();
            }else{
                
                Connection conexao = new Conexao().getConexao();
   
                try {
                    String sql = "INSERT INTO estoque (cod_prod, qtd_prod, dt_val_prod, dt_prod, hr_prod, vl_com_prod, cod_for) VALUES (?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement stmtAddEstoque = conexao.prepareStatement(sql);
                    PreparedStatement stmt = conexao.prepareStatement("UPDATE produtos SET qtd_estoque = qtd_estoque + ? WHERE cod_prod = ?;");

                    this.preparaStatement(cod_for, stmtAddEstoque, stmt);
                    stmtAddEstoque.execute();
                    stmt.execute();
                    conexao.commit();
                    
                    this.mensagem.msg("O produto foi adicionado no estoque!!");
                    this.atualizarListaDeProdutos(); 
                } catch (SQLException ex) {
                    this.mensagem.msg("N√£o foi possivel adicionar o produto no estoque!!");
                    conexao.rollback();
                } finally {
                    conexao.close();
                }
            }
        } catch (java.lang.NumberFormatException a) {
            this.mensagem.msg("Campo quantidade deve ser um n√∫mero inteiro!!");
        } 
    }
    
    private void atualizarListaDeProdutos () throws SQLException {
        Janela j = new Janela();;
        JListarProdutos a = new JListarProdutos();
        
        a.setProdutos(this.sis.BuscarProdutos());
        
        DefaultTableModel modeloTable = (DefaultTableModel) a.getTabela().getModel();
        modeloTable.setNumRows(0);

        for(Produto p : a.getProdutos()){
            Object linha[] = { p.getCod_bar_prod(), p, p.getMar_prod(), a.getDim().format(p.getVl_prod()), p.getQtd_estoque()  };
            modeloTable.addRow(linha);
        }
        
        j.setPanel(a);
        j.add(j.getMenu());
        a.setJ(j);
        j.add(a);
        j.setVisible(true);
        
        this.j.dispose();
        this.principal.dispose();
    }
    
    public void sair () throws SQLException {
        this.principal.setEnabled(true);
        this.j.dispose();
    }
    
    /**
     * @return the prod
     */
    public Produto getProd() {
        return prod;
    }

    /**
     * @param prod the prod to set
     */
    public void setProd(Produto prod) {
        this.prod = prod;
    }

    /**
     * @return the j
     */
    public Janela getJ() {
        return j;
    }

    /**
     * @param j the j to set
     */
    public void setJ(Janela j) {
        this.j = j;
    }

    /**
     * @return the principal
     */
    public Janela getPrincipal() {
        return principal;
    }

    /**
     * @param principal the principal to set
     */
    public void setPrincipal(Janela principal) {
        this.principal = principal;
    }

    /**
     * @return the sis
     */
    public Sistema getSis() {
        return sis;
    }


    /**
     * @return the lNonProd
     */
    public javax.swing.JLabel getlNonProd() {
        return lNonProd;
    }

    /**
     * @return the lMar
     */
    public javax.swing.JLabel getlMar() {
        return this.lMar;
    }

    /**
     * @return the lDes
     */
    public javax.swing.JLabel getlDes() {
        return lDes;
    }

    /**
     * @return the fornecedores
     */
    public LinkedList<Fornecedor> getFornecedores() {
        return fornecedores;
    }

    /**
     * @param fornecedores the fornecedores to set
     */
    public void setFornecedores(LinkedList<Fornecedor> fornecedores) {
        this.fornecedores = fornecedores;
    }

    /**
     * @return the cForCadProd
     */
    public javax.swing.JComboBox<String> getcForCadProd() {
        return cForCadProd;
    }

    JComboBox<String> getCForCadProd() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }   
}
