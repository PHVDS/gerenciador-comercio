package br.com.walison.lucros.visao.listagem;

import br.com.walison.lucros.visao.cadastros.JCadastroProduto;
import br.com.walison.lucros.classes.Conexao;
import br.com.walison.lucros.classes.Janela;
import br.com.walison.lucros.classes.Mensagem;
import br.com.walison.lucros.classes.modelos.Produto;
import br.com.walison.lucros.classes.Sistema;
import br.com.walison.lucros.visao.outras.JAddEstoque;
import br.com.walison.lucros.visao.edicao.JEditarProduto;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Walison Cecílio
 */
public class JListarProdutos extends javax.swing.JPanel {

    /**
     * Creates new form JProdutos
     */
    public JListarProdutos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        bEditar = new javax.swing.JButton();
        bVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cPesquisa = new javax.swing.JTextField();
        bAddEstoque = new javax.swing.JButton();
        bNovoProduto = new javax.swing.JButton();

        tabela.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD BARRA", "NOME", "MARCA", "PREÇO", "QTD ESTOQUE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setRowHeight(25);
        tabela.setRowMargin(3);
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setPreferredWidth(170);
            tabela.getColumnModel().getColumn(0).setMaxWidth(170);
            tabela.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabela.getColumnModel().getColumn(2).setMaxWidth(200);
            tabela.getColumnModel().getColumn(3).setPreferredWidth(100);
            tabela.getColumnModel().getColumn(3).setMaxWidth(100);
            tabela.getColumnModel().getColumn(4).setPreferredWidth(100);
            tabela.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        bEditar.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        bEditar.setText("EDITAR");
        bEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bEditarMouseClicked(evt);
            }
        });
        bEditar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bEditarKeyPressed(evt);
            }
        });

        bVoltar.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        bVoltar.setText("VOLTAR");
        bVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bVoltarMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setText("Listar de Produtos Cadastrados");

        jLabel2.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabel2.setText("Nome ou Codigo");

        cPesquisa.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        cPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cPesquisaActionPerformed(evt);
            }
        });
        cPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cPesquisaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cPesquisaKeyReleased(evt);
            }
        });

        bAddEstoque.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        bAddEstoque.setText("ADD ESTOQUE");
        bAddEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bAddEstoqueMouseClicked(evt);
            }
        });

        bNovoProduto.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        bNovoProduto.setText("NOVO PRODUTO");
        bNovoProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bNovoProdutoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(503, 503, 503)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bNovoProduto)
                        .addGap(32, 32, 32)
                        .addComponent(bAddEstoque)
                        .addGap(41, 41, 41)
                        .addComponent(bEditar)
                        .addGap(40, 40, 40)
                        .addComponent(bVoltar)
                        .addGap(395, 395, 395))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddEstoque)
                    .addComponent(bNovoProduto)
                    .addComponent(bEditar)
                    .addComponent(bVoltar))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bVoltarMouseClicked
        try {
            this.getJ().voltar();
        } catch (SQLException ex) {
            Logger.getLogger(JListarProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bVoltarMouseClicked

    private void bEditarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bEditarKeyPressed
     
    }//GEN-LAST:event_bEditarKeyPressed

    private void bEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEditarMouseClicked
        this.abrir();
    }//GEN-LAST:event_bEditarMouseClicked

    private void cPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cPesquisaActionPerformed

    private void cPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cPesquisaKeyReleased
        try {
            if((!this.cPesquisa.getText().equals("") || this.cPesquisa.getText() != null) && this.cPesquisa.getText().length() > 0)
                this.buscaNome();
        } catch (SQLException ex) {
            Logger.getLogger(JListarProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cPesquisaKeyReleased

    private void bNovoProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bNovoProdutoMouseClicked
        JCadastroProduto a = new JCadastroProduto();
        this.setJ2(new Janela());
        
        a.setJ(this.getJ2());
        a.getRadioUnidade().setSelected(true);
        a.setUnidade(true);
        this.getJ2().setPanel(a);
        this.getJ2().add(this.getJ2().getMenu());
        this.getJ2().add(this.getJ2().getPanel());
        this.getJ2().getMenu().setJanelaFechar(this.getJ2());
        this.getJ().dispose();
    }//GEN-LAST:event_bNovoProdutoMouseClicked

    private void bAddEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAddEstoqueMouseClicked
        int index = this.tabela.getSelectedRow();
        
        if(index > -1){
            Produto p = (Produto) this.tabela.getValueAt(index, 1);

            Janela j = new Janela(339, 450);

            JAddEstoque a = new JAddEstoque();
            a.setPrincipal(this.j);
            a.setJ(j);
            
            try {
                a.setFornecedores(a.getSis().BuscarFornecedores());
                a.getSis().ComboBoxFornecedor(a.getcForCadProd(), a.getFornecedores());
            } catch (SQLException ex) {
                Logger.getLogger(Janela.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            a.setProd(p);
            a.getlNonProd().setText(p.getNom_prod());
            a.getlMar().setText(p.getMar_prod());
            a.getlDes().setText(p.getDesc_prod());
            
            j.setPanel(a);
            j.add(a);
            j.setVisible(true);

            this.j.setEnabled(false);
        }else{
            this.mensagem.msg("Selecione o produto a ser adicionado em estoque!!");
        }
    }//GEN-LAST:event_bAddEstoqueMouseClicked

    private void cPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cPesquisaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                this.buscarPorCodigo();
            } catch (SQLException ex) {
                Logger.getLogger(JListarProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //this.cPesquisa.setText("");
    }//GEN-LAST:event_cPesquisaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddEstoque;
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bNovoProduto;
    private javax.swing.JButton bVoltar;
    private javax.swing.JTextField cPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
    private LinkedList<Produto> produtos;
    private Janela j;
    private Janela j2;
    private Sistema sis = new Sistema();
    private Mensagem mensagem = new Mensagem();
    private NumberFormat dim = NumberFormat.getCurrencyInstance();
        
    public void abrir(){
        this.setJ2(new Janela());
        JEditarProduto a = new JEditarProduto();
        a.setJ(this.getJ2());
        
        this.setaCampos(a);
        this.getJ().dispose();
    }
    
    public void setaCampos(JEditarProduto a){
        Produto p = (Produto) this.getTabela().getValueAt(this.getTabela().getSelectedRow(), 1);
        NumberFormat f = new DecimalFormat("00.00"); 
                
        a.setP(p);
        a.getcDesCadProd().setText(a.getP().getDesc_prod());
        a.getcMarCadProd().setText(a.getP().getMar_prod());
        a.getcNomCadProd().setText(a.getP().getNom_prod());
        a.getcVlVenCadProd().setText("R$ "+f.format(a.getP().getVl_prod()).replace(',', '.'));
        a.getcCodBar().setText(a.getP().getCod_bar_prod());
        
        if(p.isUnidade()){
            a.getRadioPeso().setSelected(false);
            a.getRadioUnidade().setSelected(true);
            a.setUnidade(true);
        }else{
            a.getRadioPeso().setSelected(true);
            a.getRadioUnidade().setSelected(false);
            a.setUnidade(false);
        }
        
        this.getJ2().setPanel(a);
        this.getJ2().add(this.getJ2().getMenu());
        this.getJ2().add(a);
        this.getJ2().getMenu().setJanelaFechar(this.getJ2());
    }
    
    public boolean buscarPorCodigo() throws SQLException{
        String sql = "SELECT cod_prod, nom_prod, mar_prod, vl_prod, desc_prod, unidade, cod_bar_prod, cadastrado, qtd_estoque FROM produtos WHERE cod_bar_prod = '" + this.cPesquisa.getText().trim() + "';";

        DefaultTableModel modeloTable = (DefaultTableModel) this.getTabela().getModel();
        Connection conexao = new Conexao().getConexao();
                
        try{
            ResultSet rs = conexao.createStatement().executeQuery(sql);

            if(!rs.isBeforeFirst()){
                conexao.close();
                return false;
            }

            modeloTable.setNumRows(0);
            
            LinkedList<Produto> produtos = new LinkedList<>();

            while(rs.next()){  
                Produto p = new Produto(Short.parseShort(rs.getString(1)), rs.getString(2), rs.getString(3), Float.parseFloat(rs.getString(4)),  rs.getString(5), rs.getBoolean(6), rs.getString(7), rs.getBoolean(8), rs.getShort(9));      
                produtos.add(p);
            }
            
            for(Produto p : produtos){
                Object linha[] = { p.getCod_bar_prod(), p, p.getMar_prod(), this.getDim().format(p.getVl_prod()), p.getQtd_estoque()  };
                modeloTable.addRow(linha); 
            }
        }catch (com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException e){ 
            this.buscaNome();
        }
        
        conexao.close();
        return true;
    }
    
    public boolean buscaNome() throws SQLException{
        String sql = "SELECT cod_prod, nom_prod, mar_prod, vl_prod, desc_prod, unidade, cod_bar_prod, cadastrado, qtd_estoque FROM produtos WHERE nom_prod LIKE  '%" + this.cPesquisa.getText().trim() + "%' ORDER BY nom_prod;";

        DefaultTableModel modeloTable = (DefaultTableModel) this.tabela.getModel();
        Connection conexao = new Conexao().getConexao();
        
        ResultSet rs = conexao.createStatement().executeQuery(sql);
                
        if(!rs.isBeforeFirst()){
            conexao.close();
            return false;
        }
        
        modeloTable.setNumRows(0);
        
        LinkedList<Produto> produtos = new LinkedList<>();
        
        while(rs.next()){
            Produto p = new Produto(Short.parseShort(rs.getString(1)), rs.getString(2), rs.getString(3), Float.parseFloat(rs.getString(4)),  rs.getString(5), rs.getBoolean(6), rs.getString(7), rs.getBoolean(8), rs.getShort(9));           
            produtos.add(p);
        }
        
        for(Produto p : produtos){
            Object linha[] = { p.getCod_bar_prod(), p, p.getMar_prod(), this.getDim().format(p.getVl_prod()), p.getQtd_estoque()  };
            modeloTable.addRow(linha); 
        }
        
        conexao.close();
        return true;
    }                   

    /**
     * @return the j
     */
    public Janela getJ() {
        return j;
    }

    /**
     * @param j the j to set
     */
    public void setJ(Janela j) {
        this.j = j;
    }

    /**
     * @return the j2
     */
    public Janela getJ2() {
        return j2;
    }

    /**
     * @param j2 the j2 to set
     */
    public void setJ2(Janela j2) {
        this.j2 = j2;
    }

    /**
     * @return the sis
     */
    public Sistema getSis() {
        return sis;
    }

    /**
     * @param sis the sis to set
     */
    public void setSis(Sistema sis) {
        this.sis = sis;
    }

    /**
     * @return the produtos
     */
    public LinkedList<Produto> getProdutos() {
        return produtos;
    }

    /**
     * @param produtos the produtos to set
     */
    public void setProdutos(LinkedList<Produto> produtos) {
        this.produtos = produtos;
    }

    /**
     * @return the tabela
     */
    public javax.swing.JTable getTabela() {
        return tabela;
    }

    /**
     * @return the dim
     */
    public NumberFormat getDim() {
        return dim;
    }  
}
